name: "CI"
on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
permissions:
  contents: read
  actions: write
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true
jobs:
  presubmit:
    name: "experimental_presubmit_test (py ${{ matrix.docker-python-version }} on linux-x86-n2-16)"
    runs-on: linux-x86-n2-16
    container:
      image: us-central1-docker.pkg.dev/tensorflow-sigs/tensorflow/ml-build:latest
    if: |
      github.event.pull_request.user.type == 'Bot' ||
      github.event.pull_request.user.type == 'Organization' ||
      contains(github.event.pull_request.labels.*.name, 'allow-external-ci')
    timeout-minutes: 60
    strategy:
      matrix:
        docker-python-version: ['3.11']
    steps:
      - uses: actions/checkout@v4
      - name: Init submodule
        run: |
          git config --global --add safe.directory ${GITHUB_WORKSPACE}
          git config --global --add safe.directory ${GITHUB_WORKSPACE}/third_party/tensorflow
          git submodule update --init --recursive
          git submodule update --remote

          # Run configure.
          cd ./third_party/tensorflow
          echo -e "/usr/bin/python3\/usr/lib/python3/dist-packages\N\N\Y\/usr/lib/llvm-18/bin/clang\-Wno-sign-compare -Wno-c++20-designator -Wno-gnu-inline-cpp-without-extern\N" | ./configure
          cp .tf_configure.bazelrc ${GITHUB_WORKSPACE}

      - name: Run bazel test
        # TODO(ecalubaquib): Remove continue-on-error once b/391391626 is fixed.
        continue-on-error: true
        run: |
          #!/bin/bash"
          cd ${GITHUB_WORKSPACE}
          cat .bazelrc | grep ml_build_config_platform
          export DOCKER_PYTHON_VERSION="${{ matrix.docker-python-version }}"
          export EXPERIMENTAL_TARGETS_ONLY="true"
          export BAZEL_CONFIG_FLAGS="--config=rbe_linux_cpu"
          export HERMETIC_PYTHON_VERSION=${DOCKER_PYTHON_VERSION}

          # TODO(ecalubaquib): Remove continue-on-error once b/391391626 is fixed.
          if [ $? -ne 0 ]; then
            echo "::warning:: Bazel test failed. Please check the logs for details."
          else
            echo "Bazel test passed."
          fi
